apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace:  roboshop
  labels:
    component: mysql
    project: roboshop
    tier: database
spec:
  replicas: 1
  # These are the labels replica set use to create pod replicas, this should match pod labels
  selector:
    matchLabels:
      component: mysql
      project: roboshop
      tier: database
  # this is pod definition
  template:
    metadata:
      labels:
        component: mysql
        project: roboshop
        tier: database
    spec:
      serviceAccount: roboshop-mysql-secret-reader
      volumes:
      - name: mysql_secret
        emptyDir: {}
      containers:
      - name: mysql
        image: maha110/mysql:v2 # this image is already buld in docker and pushed to docker hub. we are using it here to run container.
        imagePullPolicy: Always
        volumeMounts:
          - name: mysql_secret
            mountPath: "/tmp"
      initContainers:
      - name: fetch-secret
        image: amazon/aws-cli
        command:
          - sh
          - -c
          - |
            aws secretsmanager get-secret-value --secret-id Roboshop/mysql/password --query SecretString --output text | jq -r .MYSQL_ROOT_PASSWORD > /tmp/mysql_root_password.txt
        volumeMounts:
          - name: mysql_secret
            mountPath: "/tmp"
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: roboshop # dont forget to mention this.
  #labels in service are used to filter service based on labels . 
  labels:
    component: mysql
    project: roboshop
    tier: database
spec:
  selector:
    component: mysql
    project: roboshop
    tier: database
  ports:
    - protocol: TCP
      port: 3306 # this is source(service) port
      targetPort: 3306 # container port
